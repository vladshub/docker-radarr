name: Release Updated

on:
  schedule:
  - cron: "0 * * * *"
  push:
    branches: [ main ]



jobs:
  get-latest-version:
    name: Get Latest Version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version.outputs.tag}}
    steps:
      - name: Get latest version
        id: version
        run: echo "::set-output name=tag::$(curl "https://radarr.servarr.com/v1/update/master/changes?os=linux&runtime=netcore&arch=x64" | jq -r ".[0].version")"

  tag:
    name: Tag
    needs: get-latest-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout branch "master"
        uses: actions/checkout@v2

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            const result = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'tags/${{ needs.get-latest-version.outputs.tag }}'
            });

            if (result.status == 404) {
              console.log("creating tag: ${{ needs.get-latest-version.outputs.tag }}");
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/${{ needs.get-latest-version.outputs.tag }}',
                sha: context.sha
              });
            } else {
              console.log("tag: ${{ needs.get-latest-version.outputs.tag }} already exists");
            }
